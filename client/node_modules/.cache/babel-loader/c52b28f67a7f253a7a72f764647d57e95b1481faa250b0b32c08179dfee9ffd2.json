{"ast":null,"code":"import { GetCredentialsForIdentityCommand } from \"@aws-sdk/client-cognito-identity\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { resolveLogins } from \"./resolveLogins\";\nexport function fromCognitoIdentity(parameters) {\n  return async () => {\n    const {\n      Credentials: {\n        AccessKeyId = throwOnMissingAccessKeyId(),\n        Expiration,\n        SecretKey = throwOnMissingSecretKey(),\n        SessionToken\n      } = throwOnMissingCredentials()\n    } = await parameters.client.send(new GetCredentialsForIdentityCommand({\n      CustomRoleArn: parameters.customRoleArn,\n      IdentityId: parameters.identityId,\n      Logins: parameters.logins ? await resolveLogins(parameters.logins) : undefined\n    }));\n    return {\n      identityId: parameters.identityId,\n      accessKeyId: AccessKeyId,\n      secretAccessKey: SecretKey,\n      sessionToken: SessionToken,\n      expiration: Expiration\n    };\n  };\n}\nfunction throwOnMissingAccessKeyId() {\n  throw new CredentialsProviderError(\"Response from Amazon Cognito contained no access key ID\");\n}\nfunction throwOnMissingCredentials() {\n  throw new CredentialsProviderError(\"Response from Amazon Cognito contained no credentials\");\n}\nfunction throwOnMissingSecretKey() {\n  throw new CredentialsProviderError(\"Response from Amazon Cognito contained no secret key\");\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}