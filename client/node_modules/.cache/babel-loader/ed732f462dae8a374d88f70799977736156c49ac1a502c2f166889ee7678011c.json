{"ast":null,"code":"import { memoize } from \"@aws-sdk/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = function () {\n  let {\n    defaultsMode\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n      case \"auto\":\n        return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n      case \"mobile\":\n      case \"in-region\":\n      case \"cross-region\":\n      case \"standard\":\n      case \"legacy\":\n        return Promise.resolve(mode?.toLocaleLowerCase());\n      case undefined:\n        return Promise.resolve(\"legacy\");\n      default:\n        throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n  });\n};\nconst isMobileBrowser = () => {\n  const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent ? bowser.parse(window.navigator.userAgent) : undefined;\n  const platform = parsedUA?.platform?.type;\n  return platform === \"tablet\" || platform === \"mobile\";\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}