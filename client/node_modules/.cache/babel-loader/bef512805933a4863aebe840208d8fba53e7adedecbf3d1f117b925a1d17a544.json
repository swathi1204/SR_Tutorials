{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IsCappedOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass IsCappedOperation extends operation_1.AbstractOperation {\n  constructor(collection, options) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n  execute(server, session, callback) {\n    const coll = this.collection;\n    coll.s.db.listCollections({\n      name: coll.collectionName\n    }, {\n      ...this.options,\n      nameOnly: false,\n      readPreference: this.readPreference,\n      session\n    }).toArray((err, collections) => {\n      if (err || !collections) return callback(err);\n      if (collections.length === 0) {\n        // TODO(NODE-3485)\n        return callback(new error_1.MongoAPIError(`collection ${coll.namespace} not found`));\n      }\n      const collOptions = collections[0].options;\n      callback(undefined, !!(collOptions && collOptions.capped));\n    });\n  }\n}\nexports.IsCappedOperation = IsCappedOperation;\n//# sourceMappingURL=is_capped.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}