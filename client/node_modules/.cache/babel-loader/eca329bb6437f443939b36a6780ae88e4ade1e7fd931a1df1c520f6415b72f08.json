{"ast":null,"code":"import partitionsInfo from \"./partitions.json\";\nconst {\n  partitions\n} = partitionsInfo;\nconst DEFAULT_PARTITION = partitions.find(partition => partition.id === \"aws\");\nexport const partition = value => {\n  for (const partition of partitions) {\n    const {\n      regions,\n      outputs\n    } = partition;\n    for (const [region, regionData] of Object.entries(regions)) {\n      if (region === value) {\n        return {\n          ...outputs,\n          ...regionData\n        };\n      }\n    }\n  }\n  for (const partition of partitions) {\n    const {\n      regionRegex,\n      outputs\n    } = partition;\n    if (new RegExp(regionRegex).test(value)) {\n      return {\n        ...outputs\n      };\n    }\n  }\n  if (!DEFAULT_PARTITION) {\n    throw new Error(\"Provided region was not found in the partition array or regex,\" + \" and default partition with id 'aws' doesn't exist.\");\n  }\n  return {\n    ...DEFAULT_PARTITION.outputs\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}