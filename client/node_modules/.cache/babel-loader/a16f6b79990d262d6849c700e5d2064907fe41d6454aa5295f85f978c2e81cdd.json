{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountDocumentsOperation = void 0;\nconst aggregate_1 = require(\"./aggregate\");\n/** @internal */\nclass CountDocumentsOperation extends aggregate_1.AggregateOperation {\n  constructor(collection, query, options) {\n    const pipeline = [];\n    pipeline.push({\n      $match: query\n    });\n    if (typeof options.skip === 'number') {\n      pipeline.push({\n        $skip: options.skip\n      });\n    }\n    if (typeof options.limit === 'number') {\n      pipeline.push({\n        $limit: options.limit\n      });\n    }\n    pipeline.push({\n      $group: {\n        _id: 1,\n        n: {\n          $sum: 1\n        }\n      }\n    });\n    super(collection.s.namespace, pipeline, options);\n  }\n  execute(server, session, callback) {\n    super.execute(server, session, (err, result) => {\n      if (err || !result) {\n        callback(err);\n        return;\n      }\n      // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n      const response = result;\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(undefined, 0);\n        return;\n      }\n      const docs = response.cursor.firstBatch;\n      callback(undefined, docs.length ? docs[0].n : 0);\n    });\n  }\n}\nexports.CountDocumentsOperation = CountDocumentsOperation;\n//# sourceMappingURL=count_documents.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}