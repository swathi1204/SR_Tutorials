{"ast":null,"code":"import { cloneRequest } from \"./cloneRequest\";\nexport const moveHeadersToQuery = function (request) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    headers,\n    query = {}\n  } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n  for (const name of Object.keys(headers)) {\n    const lname = name.toLowerCase();\n    if (lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n      query[name] = headers[name];\n      delete headers[name];\n    }\n  }\n  return {\n    ...request,\n    headers,\n    query\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}