{"ast":null,"code":"import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\nexport const userAgentMiddleware = options => (next, context) => async args => {\n  const {\n    request\n  } = args;\n  if (!HttpRequest.isInstance(request)) return next(args);\n  const {\n    headers\n  } = request;\n  const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n  const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n  const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n  const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(SPACE);\n  const normalUAValue = [...defaultUserAgent.filter(section => section.startsWith(\"aws-sdk-\")), ...customUserAgent].join(SPACE);\n  if (options.runtime !== \"browser\") {\n    if (normalUAValue) {\n      headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;\n    }\n    headers[USER_AGENT] = sdkUserAgentValue;\n  } else {\n    headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n  }\n  return next({\n    ...args,\n    request\n  });\n};\nconst escapeUserAgent = _ref => {\n  let [name, version] = _ref;\n  const prefixSeparatorIndex = name.indexOf(\"/\");\n  const prefix = name.substring(0, prefixSeparatorIndex);\n  let uaName = name.substring(prefixSeparatorIndex + 1);\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n  return [prefix, uaName, version].filter(item => item && item.length > 0).map(item => item?.replace(UA_ESCAPE_REGEX, \"_\")).join(\"/\");\n};\nexport const getUserAgentMiddlewareOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true\n};\nexport const getUserAgentPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}