{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sha256 = void 0;\nvar isEmptyData_1 = require(\"./isEmptyData\");\nvar constants_1 = require(\"./constants\");\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha256 = /** @class */function () {\n  function Sha256(secret) {\n    this.secret = secret;\n    this.reset();\n  }\n  Sha256.prototype.update = function (toHash) {\n    var _this = this;\n    if ((0, isEmptyData_1.isEmptyData)(toHash)) {\n      return;\n    }\n    this.operation = this.operation.then(function (operation) {\n      operation.onerror = function () {\n        _this.operation = Promise.reject(new Error(\"Error encountered updating hash\"));\n      };\n      operation.process(toArrayBufferView(toHash));\n      return operation;\n    });\n    this.operation.catch(function () {});\n  };\n  Sha256.prototype.digest = function () {\n    return this.operation.then(function (operation) {\n      return new Promise(function (resolve, reject) {\n        operation.onerror = function () {\n          reject(new Error(\"Error encountered finalizing hash\"));\n        };\n        operation.oncomplete = function () {\n          if (operation.result) {\n            resolve(new Uint8Array(operation.result));\n          }\n          reject(new Error(\"Error encountered finalizing hash\"));\n        };\n        operation.finish();\n      });\n    });\n  };\n  Sha256.prototype.reset = function () {\n    if (this.secret) {\n      this.operation = getKeyPromise(this.secret).then(function (keyData) {\n        return (0, util_locate_window_1.locateWindow)().msCrypto.subtle.sign(constants_1.SHA_256_HMAC_ALGO, keyData);\n      });\n      this.operation.catch(function () {});\n    } else {\n      this.operation = Promise.resolve((0, util_locate_window_1.locateWindow)().msCrypto.subtle.digest(\"SHA-256\"));\n    }\n  };\n  return Sha256;\n}();\nexports.Sha256 = Sha256;\nfunction getKeyPromise(secret) {\n  return new Promise(function (resolve, reject) {\n    var keyOperation = (0, util_locate_window_1.locateWindow)().msCrypto.subtle.importKey(\"raw\", toArrayBufferView(secret), constants_1.SHA_256_HMAC_ALGO, false, [\"sign\"]);\n    keyOperation.oncomplete = function () {\n      if (keyOperation.result) {\n        resolve(keyOperation.result);\n      }\n      reject(new Error(\"ImportKey completed without importing key.\"));\n    };\n    keyOperation.onerror = function () {\n      reject(new Error(\"ImportKey failed to import key.\"));\n    };\n  });\n}\nfunction toArrayBufferView(data) {\n  if (typeof data === \"string\") {\n    return (0, util_utf8_browser_1.fromUtf8)(data);\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n  return new Uint8Array(data);\n}\n//# sourceMappingURL=ie11Sha256.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}