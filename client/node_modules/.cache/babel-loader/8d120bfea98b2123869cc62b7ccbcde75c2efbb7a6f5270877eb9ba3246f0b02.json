{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WaitQueueTimeoutError = exports.PoolClearedOnNetworkError = exports.PoolClearedError = exports.PoolClosedError = void 0;\nconst error_1 = require(\"../error\");\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nclass PoolClosedError extends error_1.MongoDriverError {\n  constructor(pool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n  get name() {\n    return 'MongoPoolClosedError';\n  }\n}\nexports.PoolClosedError = PoolClosedError;\n/**\n * An error indicating a connection pool is currently paused\n * @category Error\n */\nclass PoolClearedError extends error_1.MongoNetworkError {\n  constructor(pool, message) {\n    var _a;\n    const errorMessage = message ? message : `Connection pool for ${pool.address} was cleared because another operation failed with: \"${(_a = pool.serverError) === null || _a === void 0 ? void 0 : _a.message}\"`;\n    super(errorMessage);\n    this.address = pool.address;\n    this.addErrorLabel(error_1.MongoErrorLabel.RetryableWriteError);\n  }\n  get name() {\n    return 'MongoPoolClearedError';\n  }\n}\nexports.PoolClearedError = PoolClearedError;\n/**\n * An error indicating that a connection pool has been cleared after the monitor for that server timed out.\n * @category Error\n */\nclass PoolClearedOnNetworkError extends PoolClearedError {\n  constructor(pool) {\n    super(pool, `Connection to ${pool.address} interrupted due to server monitor timeout`);\n  }\n  get name() {\n    return 'PoolClearedOnNetworkError';\n  }\n}\nexports.PoolClearedOnNetworkError = PoolClearedOnNetworkError;\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nclass WaitQueueTimeoutError extends error_1.MongoDriverError {\n  constructor(message, address) {\n    super(message);\n    this.address = address;\n  }\n  get name() {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\nexports.WaitQueueTimeoutError = WaitQueueTimeoutError;\n//# sourceMappingURL=errors.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}