{"ast":null,"code":"import { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"@aws-sdk/util-retry\";\nexport const getDefaultRetryQuota = (initialRetryTokens, options) => {\n  const MAX_CAPACITY = initialRetryTokens;\n  const noRetryIncrement = options?.noRetryIncrement ?? NO_RETRY_INCREMENT;\n  const retryCost = options?.retryCost ?? RETRY_COST;\n  const timeoutRetryCost = options?.timeoutRetryCost ?? TIMEOUT_RETRY_COST;\n  let availableCapacity = initialRetryTokens;\n  const getCapacityAmount = error => error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost;\n  const hasRetryTokens = error => getCapacityAmount(error) <= availableCapacity;\n  const retrieveRetryTokens = error => {\n    if (!hasRetryTokens(error)) {\n      throw new Error(\"No retry token available\");\n    }\n    const capacityAmount = getCapacityAmount(error);\n    availableCapacity -= capacityAmount;\n    return capacityAmount;\n  };\n  const releaseRetryTokens = capacityReleaseAmount => {\n    availableCapacity += capacityReleaseAmount ?? noRetryIncrement;\n    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n  };\n  return Object.freeze({\n    hasRetryTokens,\n    retrieveRetryTokens,\n    releaseRetryTokens\n  });\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}