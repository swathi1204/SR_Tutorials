{"ast":null,"code":"import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, throwDefaultError } from \"@aws-sdk/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"../models/CognitoIdentityServiceException\";\nimport { ConcurrentModificationException, DeveloperUserAlreadyRegisteredException, ExternalServiceException, InternalErrorException, InvalidIdentityPoolConfigurationException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, ResourceNotFoundException, TooManyRequestsException } from \"../models/models_0\";\nexport const serializeAws_json1_1CreateIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.CreateIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetCredentialsForIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetCredentialsForIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetId\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdentityPoolRolesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetIdentityPoolRoles\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdToken\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetPrincipalTagAttributeMap\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetPrincipalTagAttributeMapInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentityPoolsCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentityPools\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListTagsForResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListTagsForResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1LookupDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.LookupDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1MergeDeveloperIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.MergeDeveloperIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetIdentityPoolRolesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.SetIdentityPoolRoles\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.SetPrincipalTagAttributeMap\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1SetPrincipalTagAttributeMapInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1TagResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.TagResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UntagResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UntagResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UpdateIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UpdateIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const deserializeAws_json1_1CreateIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateIdentityPoolCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1CreateIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1DeleteIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentitiesCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DeleteIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1DeleteIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DeleteIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1DescribeIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityDescription(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DescribeIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1DescribeIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DescribeIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetCredentialsForIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetCredentialsForIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidIdentityPoolConfigurationException\":\n    case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n      throw await deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetIdCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetIdResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetIdCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetIdentityPoolRolesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetIdentityPoolRolesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetOpenIdTokenCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetOpenIdTokenCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DeveloperUserAlreadyRegisteredException\":\n    case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n      throw await deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetPrincipalTagAttributeMapResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1ListIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentitiesCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1ListIdentityPoolsCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentityPoolsCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListIdentityPoolsCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1ListTagsForResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsForResourceCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListTagsForResourceCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1LookupDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1LookupDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1MergeDeveloperIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1MergeDeveloperIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1SetIdentityPoolRolesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1SetIdentityPoolRolesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1SetPrincipalTagAttributeMapResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1TagResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TagResourceCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1TagResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1TagResourceCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1UnlinkDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UnlinkDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1UnlinkIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkIdentityCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UnlinkIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1UntagResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UntagResourceCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UntagResourceCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1UpdateIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UpdateIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n  const exception = new ConcurrentModificationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);\n  const exception = new DeveloperUserAlreadyRegisteredException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ExternalServiceExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ExternalServiceException(body, context);\n  const exception = new ExternalServiceException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InternalErrorExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InternalErrorException(body, context);\n  const exception = new InternalErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);\n  const exception = new InvalidIdentityPoolConfigurationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n  const exception = new InvalidParameterException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n  const exception = new LimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1NotAuthorizedExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1NotAuthorizedException(body, context);\n  const exception = new NotAuthorizedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ResourceConflictExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ResourceConflictException(body, context);\n  const exception = new ResourceConflictException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const exception = new ResourceNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n  const exception = new TooManyRequestsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst serializeAws_json1_1CognitoIdentityProvider = (input, context) => {\n  return {\n    ...(input.ClientId != null && {\n      ClientId: input.ClientId\n    }),\n    ...(input.ProviderName != null && {\n      ProviderName: input.ProviderName\n    }),\n    ...(input.ServerSideTokenCheck != null && {\n      ServerSideTokenCheck: input.ServerSideTokenCheck\n    })\n  };\n};\nconst serializeAws_json1_1CognitoIdentityProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return serializeAws_json1_1CognitoIdentityProvider(entry, context);\n  });\n};\nconst serializeAws_json1_1CreateIdentityPoolInput = (input, context) => {\n  return {\n    ...(input.AllowClassicFlow != null && {\n      AllowClassicFlow: input.AllowClassicFlow\n    }),\n    ...(input.AllowUnauthenticatedIdentities != null && {\n      AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities\n    }),\n    ...(input.CognitoIdentityProviders != null && {\n      CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context)\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolName != null && {\n      IdentityPoolName: input.IdentityPoolName\n    }),\n    ...(input.IdentityPoolTags != null && {\n      IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context)\n    }),\n    ...(input.OpenIdConnectProviderARNs != null && {\n      OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context)\n    }),\n    ...(input.SamlProviderARNs != null && {\n      SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context)\n    }),\n    ...(input.SupportedLoginProviders != null && {\n      SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context)\n    })\n  };\n};\nconst serializeAws_json1_1DeleteIdentitiesInput = (input, context) => {\n  return {\n    ...(input.IdentityIdsToDelete != null && {\n      IdentityIdsToDelete: serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context)\n    })\n  };\n};\nconst serializeAws_json1_1DeleteIdentityPoolInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\nconst serializeAws_json1_1DescribeIdentityInput = (input, context) => {\n  return {\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    })\n  };\n};\nconst serializeAws_json1_1DescribeIdentityPoolInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\nconst serializeAws_json1_1GetCredentialsForIdentityInput = (input, context) => {\n  return {\n    ...(input.CustomRoleArn != null && {\n      CustomRoleArn: input.CustomRoleArn\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\nconst serializeAws_json1_1GetIdentityPoolRolesInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\nconst serializeAws_json1_1GetIdInput = (input, context) => {\n  return {\n    ...(input.AccountId != null && {\n      AccountId: input.AccountId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\nconst serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = (input, context) => {\n  return {\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    }),\n    ...(input.PrincipalTags != null && {\n      PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context)\n    }),\n    ...(input.TokenDuration != null && {\n      TokenDuration: input.TokenDuration\n    })\n  };\n};\nconst serializeAws_json1_1GetOpenIdTokenInput = (input, context) => {\n  return {\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\nconst serializeAws_json1_1GetPrincipalTagAttributeMapInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityProviderName != null && {\n      IdentityProviderName: input.IdentityProviderName\n    })\n  };\n};\nconst serializeAws_json1_1IdentityIdList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1IdentityPool = (input, context) => {\n  return {\n    ...(input.AllowClassicFlow != null && {\n      AllowClassicFlow: input.AllowClassicFlow\n    }),\n    ...(input.AllowUnauthenticatedIdentities != null && {\n      AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities\n    }),\n    ...(input.CognitoIdentityProviders != null && {\n      CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context)\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityPoolName != null && {\n      IdentityPoolName: input.IdentityPoolName\n    }),\n    ...(input.IdentityPoolTags != null && {\n      IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context)\n    }),\n    ...(input.OpenIdConnectProviderARNs != null && {\n      OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context)\n    }),\n    ...(input.SamlProviderARNs != null && {\n      SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context)\n    }),\n    ...(input.SupportedLoginProviders != null && {\n      SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context)\n    })\n  };\n};\nconst serializeAws_json1_1IdentityPoolTagsListType = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1IdentityPoolTagsType = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref) => {\n    let [key, value] = _ref;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1IdentityProviders = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref2) => {\n    let [key, value] = _ref2;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1ListIdentitiesInput = (input, context) => {\n  return {\n    ...(input.HideDisabled != null && {\n      HideDisabled: input.HideDisabled\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\nconst serializeAws_json1_1ListIdentityPoolsInput = (input, context) => {\n  return {\n    ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\nconst serializeAws_json1_1ListTagsForResourceInput = (input, context) => {\n  return {\n    ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    })\n  };\n};\nconst serializeAws_json1_1LoginsList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1LoginsMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref3) => {\n    let [key, value] = _ref3;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1LookupDeveloperIdentityInput = (input, context) => {\n  return {\n    ...(input.DeveloperUserIdentifier != null && {\n      DeveloperUserIdentifier: input.DeveloperUserIdentifier\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\nconst serializeAws_json1_1MappingRule = (input, context) => {\n  return {\n    ...(input.Claim != null && {\n      Claim: input.Claim\n    }),\n    ...(input.MatchType != null && {\n      MatchType: input.MatchType\n    }),\n    ...(input.RoleARN != null && {\n      RoleARN: input.RoleARN\n    }),\n    ...(input.Value != null && {\n      Value: input.Value\n    })\n  };\n};\nconst serializeAws_json1_1MappingRulesList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return serializeAws_json1_1MappingRule(entry, context);\n  });\n};\nconst serializeAws_json1_1MergeDeveloperIdentitiesInput = (input, context) => {\n  return {\n    ...(input.DestinationUserIdentifier != null && {\n      DestinationUserIdentifier: input.DestinationUserIdentifier\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.SourceUserIdentifier != null && {\n      SourceUserIdentifier: input.SourceUserIdentifier\n    })\n  };\n};\nconst serializeAws_json1_1OIDCProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1PrincipalTags = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref4) => {\n    let [key, value] = _ref4;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1RoleMapping = (input, context) => {\n  return {\n    ...(input.AmbiguousRoleResolution != null && {\n      AmbiguousRoleResolution: input.AmbiguousRoleResolution\n    }),\n    ...(input.RulesConfiguration != null && {\n      RulesConfiguration: serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context)\n    }),\n    ...(input.Type != null && {\n      Type: input.Type\n    })\n  };\n};\nconst serializeAws_json1_1RoleMappingMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref5) => {\n    let [key, value] = _ref5;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = serializeAws_json1_1RoleMapping(value, context);\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1RolesMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref6) => {\n    let [key, value] = _ref6;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1RulesConfigurationType = (input, context) => {\n  return {\n    ...(input.Rules != null && {\n      Rules: serializeAws_json1_1MappingRulesList(input.Rules, context)\n    })\n  };\n};\nconst serializeAws_json1_1SAMLProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1SetIdentityPoolRolesInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.RoleMappings != null && {\n      RoleMappings: serializeAws_json1_1RoleMappingMap(input.RoleMappings, context)\n    }),\n    ...(input.Roles != null && {\n      Roles: serializeAws_json1_1RolesMap(input.Roles, context)\n    })\n  };\n};\nconst serializeAws_json1_1SetPrincipalTagAttributeMapInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityProviderName != null && {\n      IdentityProviderName: input.IdentityProviderName\n    }),\n    ...(input.PrincipalTags != null && {\n      PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context)\n    }),\n    ...(input.UseDefaults != null && {\n      UseDefaults: input.UseDefaults\n    })\n  };\n};\nconst serializeAws_json1_1TagResourceInput = (input, context) => {\n  return {\n    ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    }),\n    ...(input.Tags != null && {\n      Tags: serializeAws_json1_1IdentityPoolTagsType(input.Tags, context)\n    })\n  };\n};\nconst serializeAws_json1_1UnlinkDeveloperIdentityInput = (input, context) => {\n  return {\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.DeveloperUserIdentifier != null && {\n      DeveloperUserIdentifier: input.DeveloperUserIdentifier\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\nconst serializeAws_json1_1UnlinkIdentityInput = (input, context) => {\n  return {\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    }),\n    ...(input.LoginsToRemove != null && {\n      LoginsToRemove: serializeAws_json1_1LoginsList(input.LoginsToRemove, context)\n    })\n  };\n};\nconst serializeAws_json1_1UntagResourceInput = (input, context) => {\n  return {\n    ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    }),\n    ...(input.TagKeys != null && {\n      TagKeys: serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context)\n    })\n  };\n};\nconst deserializeAws_json1_1CognitoIdentityProvider = (output, context) => {\n  return {\n    ClientId: __expectString(output.ClientId),\n    ProviderName: __expectString(output.ProviderName),\n    ServerSideTokenCheck: __expectBoolean(output.ServerSideTokenCheck)\n  };\n};\nconst deserializeAws_json1_1CognitoIdentityProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1CognitoIdentityProvider(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1ConcurrentModificationException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1Credentials = (output, context) => {\n  return {\n    AccessKeyId: __expectString(output.AccessKeyId),\n    Expiration: output.Expiration != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.Expiration))) : undefined,\n    SecretKey: __expectString(output.SecretKey),\n    SessionToken: __expectString(output.SessionToken)\n  };\n};\nconst deserializeAws_json1_1DeleteIdentitiesResponse = (output, context) => {\n  return {\n    UnprocessedIdentityIds: output.UnprocessedIdentityIds != null ? deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context) : undefined\n  };\n};\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1DeveloperUserIdentifierList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1ExternalServiceException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1GetCredentialsForIdentityResponse = (output, context) => {\n  return {\n    Credentials: output.Credentials != null ? deserializeAws_json1_1Credentials(output.Credentials, context) : undefined,\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\nconst deserializeAws_json1_1GetIdentityPoolRolesResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    RoleMappings: output.RoleMappings != null ? deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context) : undefined,\n    Roles: output.Roles != null ? deserializeAws_json1_1RolesMap(output.Roles, context) : undefined\n  };\n};\nconst deserializeAws_json1_1GetIdResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId),\n    Token: __expectString(output.Token)\n  };\n};\nconst deserializeAws_json1_1GetOpenIdTokenResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId),\n    Token: __expectString(output.Token)\n  };\n};\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityProviderName: __expectString(output.IdentityProviderName),\n    PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n    UseDefaults: __expectBoolean(output.UseDefaults)\n  };\n};\nconst deserializeAws_json1_1IdentitiesList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1IdentityDescription(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1IdentityDescription = (output, context) => {\n  return {\n    CreationDate: output.CreationDate != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationDate))) : undefined,\n    IdentityId: __expectString(output.IdentityId),\n    LastModifiedDate: output.LastModifiedDate != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedDate))) : undefined,\n    Logins: output.Logins != null ? deserializeAws_json1_1LoginsList(output.Logins, context) : undefined\n  };\n};\nconst deserializeAws_json1_1IdentityPool = (output, context) => {\n  return {\n    AllowClassicFlow: __expectBoolean(output.AllowClassicFlow),\n    AllowUnauthenticatedIdentities: __expectBoolean(output.AllowUnauthenticatedIdentities),\n    CognitoIdentityProviders: output.CognitoIdentityProviders != null ? deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context) : undefined,\n    DeveloperProviderName: __expectString(output.DeveloperProviderName),\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityPoolName: __expectString(output.IdentityPoolName),\n    IdentityPoolTags: output.IdentityPoolTags != null ? deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context) : undefined,\n    OpenIdConnectProviderARNs: output.OpenIdConnectProviderARNs != null ? deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context) : undefined,\n    SamlProviderARNs: output.SamlProviderARNs != null ? deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context) : undefined,\n    SupportedLoginProviders: output.SupportedLoginProviders != null ? deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context) : undefined\n  };\n};\nconst deserializeAws_json1_1IdentityPoolShortDescription = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityPoolName: __expectString(output.IdentityPoolName)\n  };\n};\nconst deserializeAws_json1_1IdentityPoolsList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1IdentityPoolTagsType = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref7) => {\n    let [key, value] = _ref7;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1IdentityProviders = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref8) => {\n    let [key, value] = _ref8;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1InternalErrorException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1InvalidParameterException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1LimitExceededException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1ListIdentitiesResponse = (output, context) => {\n  return {\n    Identities: output.Identities != null ? deserializeAws_json1_1IdentitiesList(output.Identities, context) : undefined,\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    NextToken: __expectString(output.NextToken)\n  };\n};\nconst deserializeAws_json1_1ListIdentityPoolsResponse = (output, context) => {\n  return {\n    IdentityPools: output.IdentityPools != null ? deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context) : undefined,\n    NextToken: __expectString(output.NextToken)\n  };\n};\nconst deserializeAws_json1_1ListTagsForResourceResponse = (output, context) => {\n  return {\n    Tags: output.Tags != null ? deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context) : undefined\n  };\n};\nconst deserializeAws_json1_1LoginsList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1LookupDeveloperIdentityResponse = (output, context) => {\n  return {\n    DeveloperUserIdentifierList: output.DeveloperUserIdentifierList != null ? deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context) : undefined,\n    IdentityId: __expectString(output.IdentityId),\n    NextToken: __expectString(output.NextToken)\n  };\n};\nconst deserializeAws_json1_1MappingRule = (output, context) => {\n  return {\n    Claim: __expectString(output.Claim),\n    MatchType: __expectString(output.MatchType),\n    RoleARN: __expectString(output.RoleARN),\n    Value: __expectString(output.Value)\n  };\n};\nconst deserializeAws_json1_1MappingRulesList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1MappingRule(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1MergeDeveloperIdentitiesResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\nconst deserializeAws_json1_1NotAuthorizedException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1OIDCProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1PrincipalTags = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref9) => {\n    let [key, value] = _ref9;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1ResourceConflictException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1ResourceNotFoundException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1RoleMapping = (output, context) => {\n  return {\n    AmbiguousRoleResolution: __expectString(output.AmbiguousRoleResolution),\n    RulesConfiguration: output.RulesConfiguration != null ? deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context) : undefined,\n    Type: __expectString(output.Type)\n  };\n};\nconst deserializeAws_json1_1RoleMappingMap = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref10) => {\n    let [key, value] = _ref10;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = deserializeAws_json1_1RoleMapping(value, context);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1RolesMap = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref11) => {\n    let [key, value] = _ref11;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1RulesConfigurationType = (output, context) => {\n  return {\n    Rules: output.Rules != null ? deserializeAws_json1_1MappingRulesList(output.Rules, context) : undefined\n  };\n};\nconst deserializeAws_json1_1SAMLProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityProviderName: __expectString(output.IdentityProviderName),\n    PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n    UseDefaults: __expectBoolean(output.UseDefaults)\n  };\n};\nconst deserializeAws_json1_1TagResourceResponse = (output, context) => {\n  return {};\n};\nconst deserializeAws_json1_1TooManyRequestsException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1UnprocessedIdentityId = (output, context) => {\n  return {\n    ErrorCode: __expectString(output.ErrorCode),\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\nconst deserializeAws_json1_1UnprocessedIdentityIdList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1UnprocessedIdentityId(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1UntagResourceResponse = (output, context) => {\n  return {};\n};\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\nconst collectBody = function () {\n  let streamBody = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();\n  let context = arguments.length > 1 ? arguments[1] : undefined;\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const contents = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n    headers\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then(encoded => {\n  if (encoded.length) {\n    return JSON.parse(encoded);\n  }\n  return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n  const value = await parseBody(errorBody, context);\n  value.message = value.message ?? value.Message;\n  return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n  const findKey = (object, key) => Object.keys(object).find(k => k.toLowerCase() === key.toLowerCase());\n  const sanitizeErrorCode = rawValue => {\n    let cleanValue = rawValue;\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}