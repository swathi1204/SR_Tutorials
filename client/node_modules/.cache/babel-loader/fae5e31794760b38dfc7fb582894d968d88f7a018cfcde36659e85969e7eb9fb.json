{"ast":null,"code":"import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n  if (!customizations) return baseCtor;else return class CustomizableSTSClient extends baseCtor {\n    constructor(config) {\n      super(config);\n      for (const customization of customizations) {\n        this.middlewareStack.use(customization);\n      }\n    }\n  };\n};\nexport const getDefaultRoleAssumer = function () {\n  let stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let stsPlugins = arguments.length > 1 ? arguments[1] : undefined;\n  return StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\n};\nexport const getDefaultRoleAssumerWithWebIdentity = function () {\n  let stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let stsPlugins = arguments.length > 1 ? arguments[1] : undefined;\n  return StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\n};\nexport const decorateDefaultCredentialProvider = provider => input => provider({\n  roleAssumer: getDefaultRoleAssumer(input),\n  roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n  ...input\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}