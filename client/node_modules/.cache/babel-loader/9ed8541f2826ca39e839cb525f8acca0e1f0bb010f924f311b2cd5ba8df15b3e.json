{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SWATI\\\\vs_projects\\\\tutorial\\\\client\\\\src\\\\components\\\\Branch\\\\Sregister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Sregister.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sregister = () => {\n  _s();\n  const navigate = useNavigate();\n  const [student, setStudent] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cpassword: \"\",\n    education: \"\",\n    contactNumber: \"\",\n    presentAddress: \"\",\n    permanentAddress: \"\",\n    subjects: \"\"\n  });\n  let name, value;\n  const handleInputs = e => {\n    console.log(e);\n    name = e.target.name;\n    value = e.target.value;\n    setStudent({\n      ...student,\n      [name]: value\n    });\n  };\n  const PostData = async e => {\n    e.preventDefault();\n    console.log(e);\n    const {\n      name,\n      email,\n      password,\n      cpassword,\n      education,\n      contactNumber,\n      presentAddress,\n      permanentAddress,\n      subjects\n    } = tutor;\n    const res = await fetch(\"/studentregister\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        cpassword,\n        board,\n        c,\n        contactNumber,\n        presentAddress,\n        permanentAddress,\n        subjects\n      })\n    });\n    const data = await res.json();\n    console.log(data);\n    if (data.status === 422 || !data) {\n      window.alert(\"Information not filled\");\n      console.log(\"Information not filled\");\n    } else {\n      window.alert(\"successfully received\");\n      console.log(\"successfully received\");\n      navigate(\"/\");\n    }\n  };\n\n  // function Sregister() {\n  //   const [fullName, setFullName] = useState(\"\");\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n  //   const [confirmPassword, setConfirmPassword] = useState(\"\");\n  //   const [Board, setBoard] = useState(\"\");\n  //   const [contactNumber, setContactNumber] = useState(\"\");\n  //   const [presentAddress, setPresentAddress] = useState(\"\");\n  //   const [subjects, setSubjects] = useState([]);\n  //   const [addressProof, setAddressProof] = useState(\"\");\n  //   const [errors] = useState({});\n  //   const [addressProofa, setAddressProofa] = useState('None');\n  //   const [Query, setQuery] = useState(\"\");\n  //   const [classLevel, setClassLevel] = useState('1');\n\n  //   const handleSubmit = (event) => {\n  //     event.preventDefault();\n\n  //  const formData = {\n  //       fullName,\n  //       email,\n  //       password,\n  //       confirmPassword,\n  //       Board,\n  //       contactNumber,\n  //       presentAddress,\n\n  //       subjects,\n  //       addressProof,\n  //     };\n\n  //     console.log(formData);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"formabc\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Student Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"labelx\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fullName,\n          onChange: event => setFullName(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), errors.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"string\",\n          value: email,\n          onChange: event => setEmail(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: event => setConfirmPassword(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Board,\n          onChange: event => setBoard(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), errors.education && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.education\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: classLevel,\n          onChange: e => setClassLevel(e.target.value),\n          children: Array.from({\n            length: 12\n          }, (_, index) => index + 1).map(number => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: number,\n            children: number\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Contact Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: contactNumber,\n          onChange: event => setContactNumber(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), errors.contactNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.contactNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Present Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: presentAddress,\n          onChange: event => setPresentAddress(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), errors.presentAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.presentAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Subject required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: subjects,\n          onChange: event => setSubjects(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 5\n        }, this), errors.subjects && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.subjects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Address Proof\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: addressProofa,\n          onChange: e => setAddressProofa(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Aadhar\",\n            children: \"Aadhar Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"passport\",\n            children: \"Passport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Address proof\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: event => setAddressProof(event.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 5\n        }, this), errors.addressProof && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.addressProof\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"labelb\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Any Queries?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: Query,\n          onChange: event => setQuery(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this), errors.Query && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.Query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Sregister, \"bYbbOmxJ5pc4CJc7IUl1fg3v6UM=\", false, function () {\n  return [useNavigate];\n});\n_c = Sregister;\nexport default Sregister;\nvar _c;\n$RefreshReg$(_c, \"Sregister\");","map":{"version":3,"names":["React","useState","useNavigate","Sregister","navigate","student","setStudent","name","email","password","cpassword","education","contactNumber","presentAddress","permanentAddress","subjects","value","handleInputs","e","console","log","target","PostData","preventDefault","tutor","res","fetch","method","headers","body","JSON","stringify","board","c","data","json","status","window","alert","handleSubmit","fullName","event","setFullName","errors","setEmail","setPassword","confirmPassword","setConfirmPassword","Board","setBoard","classLevel","setClassLevel","Array","from","length","_","index","map","number","setContactNumber","setPresentAddress","setSubjects","addressProofa","setAddressProofa","setAddressProof","files","addressProof","Query","setQuery"],"sources":["C:/Users/SWATI/vs_projects/tutorial/client/src/components/Branch/Sregister.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Sregister.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Sregister = () =>{\r\n\r\n  const navigate= useNavigate();\r\n\r\n  const[student,setStudent]= useState({\r\n      name:\"\", email:\"\", password:\"\", cpassword:\"\" , education:\"\", contactNumber:\"\", presentAddress:\"\", permanentAddress:\"\", subjects:\"\"});\r\n    let name, value;\r\n    const handleInputs=(e)=>{\r\n    console.log(e);\r\n    name= e.target.name;\r\n    value= e.target.value;\r\n  \r\n    setStudent({...student, [name]:value});\r\n  \r\n  }\r\n\r\nconst PostData = async (e) => {\r\n  e.preventDefault();\r\nconsole.log(e)\r\n  const {name, email, password, cpassword, education, contactNumber, presentAddress, permanentAddress, subjects}= tutor;\r\n  \r\n   const res = await fetch(\"/studentregister\",{\r\n     method:\"POST\",\r\n     headers:{\r\n       \"Content-type\":\"application/json\"\r\n     },\r\n     body: JSON.stringify({\r\n      name, email, password, cpassword, board,c, contactNumber, presentAddress, permanentAddress, subjects\r\n     })\r\n   });\r\n   const data = await res.json();\r\n   console.log(data)\r\n   if (data.status === 422 || !data) {\r\n     window.alert(\"Information not filled\");\r\n     console.log(\"Information not filled\");\r\n   }else{\r\n     window.alert(\"successfully received\");\r\n     console.log(\"successfully received\");\r\n\r\n     navigate(\"/\");\r\n    }\r\n}\r\n\r\n\r\n// function Sregister() {\r\n//   const [fullName, setFullName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [Board, setBoard] = useState(\"\");\r\n//   const [contactNumber, setContactNumber] = useState(\"\");\r\n//   const [presentAddress, setPresentAddress] = useState(\"\");\r\n//   const [subjects, setSubjects] = useState([]);\r\n//   const [addressProof, setAddressProof] = useState(\"\");\r\n//   const [errors] = useState({});\r\n//   const [addressProofa, setAddressProofa] = useState('None');\r\n//   const [Query, setQuery] = useState(\"\");\r\n//   const [classLevel, setClassLevel] = useState('1');\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n\r\n//  const formData = {\r\n//       fullName,\r\n//       email,\r\n//       password,\r\n//       confirmPassword,\r\n//       Board,\r\n//       contactNumber,\r\n//       presentAddress,\r\n     \r\n//       subjects,\r\n//       addressProof,\r\n//     };\r\n\r\n//     console.log(formData);\r\n//   };\r\n\r\n  return (\r\n    <>\r\n    \r\n    <formabc onSubmit={handleSubmit}>\r\n    <h1>Student Registration</h1>      \r\n      <labelx>\r\n        <b>Full Name</b>\r\n        <input\r\n          type=\"text\"\r\n          value={fullName}\r\n          onChange={(event) => setFullName(event.target.value)} required\r\n        />\r\n        {errors.fullName && <div className=\"error\">{errors.fullName}</div>}\r\n      </labelx>\r\n      <labelb>\r\n        <b>Email</b>\r\n        <input\r\n          type=\"string\"\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}required\r\n        />\r\n        {errors.email && <div className=\"error\">{errors.email}</div>}\r\n      </labelb>\r\n      <labelb>\r\n       <b>Password</b>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}required\r\n        />\r\n        {errors.password && <div className=\"error\">{errors.password}</div>}\r\n      </labelb>\r\n      <labelb>\r\n        <b>Confirm Password</b>\r\n        <input\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(event) => setConfirmPassword(event.target.value)}required\r\n        />\r\n        {errors.confirmPassword && (\r\n          <div className=\"error\">{errors.confirmPassword}</div>\r\n        )}\r\n      </labelb>\r\n      <labelb>\r\n       <b>Board</b> \r\n        <input\r\n          type=\"text\"\r\n          value={Board}\r\n          onChange={(event) => setBoard(event.target.value)}required\r\n        />\r\n        {errors.education && <div className=\"error\">{errors.education}</div>}\r\n      </labelb>\r\n      <labelb>\r\n        <b>Class</b>\r\n        <select value={classLevel} onChange={(e) => setClassLevel(e.target.value)}>\r\n          {Array.from({ length: 12 }, (_, index) => index + 1).map((number) => (\r\n            <option value={number} key={number}>\r\n              {number}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </labelb>\r\n\r\n\r\n\r\n      <labelb>\r\n       <b>Contact Number</b> \r\n        <input\r\n          type=\"number\"\r\n          value={contactNumber}\r\n          onChange={(event) => setContactNumber(event.target.value)}required\r\n        />\r\n        {errors.contactNumber && (\r\n          <div className=\"error\">{errors.contactNumber}</div>\r\n        )}\r\n      </labelb>\r\n      <labelb>\r\n        <b>Present Address</b>\r\n        <textarea\r\n          value={presentAddress}\r\n          onChange={(event) => setPresentAddress(event.target.value)}required\r\n        />\r\n        {errors.presentAddress && (\r\n          <div className=\"error\">{errors.presentAddress}</div>\r\n        )}\r\n      </labelb>\r\n    \r\n  \r\n  <labelb>\r\n    <b>Subject required</b>\r\n    <input\r\n      type=\"text\"\r\n      value={subjects}\r\n      onChange={(event) => setSubjects(event.target.value)}required\r\n    />\r\n    {errors.subjects && <div className=\"error\">{errors.subjects}</div>}\r\n  </labelb>\r\n  <labelb>\r\n        <b>Address Proof</b>\r\n        <select value={addressProofa} onChange={(e) => setAddressProofa(e.target.value)}>\r\n          <option value=\"Aadhar\">Aadhar Card</option>\r\n          {/* <option value=\"DL\">Driving License</option> */}\r\n          <option value=\"passport\">Passport</option>\r\n          \r\n        </select>\r\n      </labelb>\r\n  <labelb>\r\n    <b>Address proof</b>\r\n    \r\n    <input\r\n      type=\"file\"\r\n      onChange={(event) => setAddressProof(event.target.files[0])}\r\n    />\r\n    {errors.addressProof && (\r\n      <div className=\"error\">{errors.addressProof}</div>\r\n    )}\r\n   \r\n  </labelb>\r\n  \r\n  <labelb>\r\n        <b>Any Queries?</b>\r\n        <textarea\r\n          value={Query}\r\n          onChange={(event) => setQuery(event.target.value)}required\r\n        />\r\n        {errors.Query && (\r\n          <div className=\"error\">{errors.Query}</div>\r\n        )}\r\n      </labelb>\r\n\r\n\r\n  <button type=\"submit\">Register</button>\r\n</formabc>\r\n</>\r\n );\r\n}\r\n\r\nexport default Sregister;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}