{"ast":null,"code":"import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = (_ref, unsignableHeaders, signableHeaders) => {\n  let {\n    headers\n  } = _ref;\n  const canonical = {};\n  for (const headerName of Object.keys(headers).sort()) {\n    if (headers[headerName] == undefined) {\n      continue;\n    }\n    const canonicalHeaderName = headerName.toLowerCase();\n    if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || unsignableHeaders?.has(canonicalHeaderName) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n      if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {\n        continue;\n      }\n    }\n    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n  }\n  return canonical;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}